{"version":3,"sources":["webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./src/components/post-card-modern/post-card-modern.style.tsx","webpack:///./src/components/post-card-modern/post-card-modern.tsx","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./src/components/feature-post/feature-post.style.tsx","webpack:///./src/components/feature-post/feature-post.tsx","webpack:///./src/images/banner-bg.jpg","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/containers/home/style.tsx","webpack:///./src/containers/home/posts/style.tsx","webpack:///./src/containers/home/posts/index.tsx","webpack:///./src/containers/home/banner/style.tsx","webpack:///./src/containers/home/banner/index.tsx","webpack:///./src/containers/home/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_baseToString.js"],"names":["module","exports","object","key","undefined","PostCardModernWrapper","styled","div","PostPreview","PostDetails","PostDate","PostTitle","h2","themeGet","Excerpt","p","PostTags","PostCardModern","image","title","description","url","date","tags","className","imageType","placeholderBG","props","addAllClasses","push","join","to","fluid","alt","backgroundColor","fixed","dangerouslySetInnerHTML","__html","map","tag","index","defaultProps","asciiWords","hasUnicodeWord","toString","unicodeWords","string","pattern","guard","match","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","rsEmoji","reUnicodeWord","RegExp","FeaturedPostWrapper","h1","PostMeta","FeaturedPost","slice","kebabCase","createCompounder","result","word","toLowerCase","PersonalBlogWrapper","BlogPostsWrapper","PostRow","PostGrid","SeeMore","Posts","useStaticQuery","allMarkdownRemark","edges","node","frontmatter","fields","slug","placeholderColors","setColor","Math","floor","random","length","cover","childImageSharp","excerpt","type","BannerWrapper","BannerBG","BannerInner","FeaturePosts","Title","Banner","PersonalBlog","pageQuery","HomePage","data","site","siteMetadata","deburrLetter","reLatin","reComboMark","replace","array","iteratee","accumulator","initAccum","reAsciiWord","baseToString","value","Array","reHasUnicodeWord","test","basePropertyOf","arrayReduce","deburr","words","reApos","callback","Symbol","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","call"],"mappings":"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","file":"component---src-pages-index-tsx-3a2a23e7bfe6d22403e5.js","sourcesContent":["/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PostCardModernWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  margin-bottom: 30px;\r\n  position: relative;\r\n  min-height: 150px;\r\n  img {\r\n    border-radius: 3px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 80%;\r\n    height: 80%;\r\n    background-color: #757575;\r\n    bottom: 0;\r\n    left: 10%;\r\n    filter: blur(15px);\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div``;\r\n\r\nexport const PostDate = styled.div`\r\n  position: absolute;\r\n  width: 75px;\r\n  height: 75px;\r\n  top: 30px;\r\n  left: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 6px;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  line-height: 1;\r\n  pointer-events: none;\r\n  z-index: 1;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  > span {\r\n    font-size: 13px;\r\n    font-weight: normal;\r\n    line-height: 1;\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 21px;\r\n  font-weight: 700;\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  line-height: 1.53;\r\n  margin-bottom: 10px;\r\n  font-family: ${themeGet('fontFamily.0')};\r\n  a {\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n  }\r\n  @media (max-width: 1200px) {\r\n    font-size: 20px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    font-size: 19px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Excerpt = styled.p`\r\n  font-size: ${themeGet('fontSizes.3', '15')}px;\r\n  color: ${themeGet('textColor', '#292929')};\r\n  font-weight: 400;\r\n  line-height: 2;\r\n  margin-bottom: 0;\r\n  @media (max-width: 990px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n\r\n  a {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#D10068')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport _ from 'lodash';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  PostCardModernWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostDate,\r\n  PostTitle,\r\n  Excerpt,\r\n  PostTags,\r\n} from './post-card-modern.style';\r\n\r\ninterface PostCardModernProps {\r\n  image?: any;\r\n  title: string;\r\n  description?: string;\r\n  url: string;\r\n  date?: string;\r\n  tags?: [];\r\n  className?: string;\r\n  imageType?: 'fixed' | 'fluid';\r\n  placeholderBG?: string;\r\n}\r\n\r\nconst PostCardModern: React.FunctionComponent<PostCardModernProps> = ({\r\n  image,\r\n  title,\r\n  description,\r\n  url,\r\n  date,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  placeholderBG,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['post_card_modern'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  return (\r\n    <PostCardModernWrapper className={addAllClasses.join(' ')} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>\r\n            {imageType === 'fluid' ? (\r\n              <Img\r\n                fluid={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n            ) : (\r\n              <Img\r\n                fixed={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n            )}\r\n          </Link>\r\n          {date && (\r\n            <PostDate\r\n              dangerouslySetInnerHTML={{\r\n                __html: date,\r\n              }}\r\n              className=\"post_date\"\r\n            />\r\n          )}\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails className=\"post_details\">\r\n        {tags == null ? null : (\r\n          <PostTags className=\"post_tags\">\r\n            {tags.map((tag: string, index: number) => (\r\n              <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\r\n                {`#${tag}`}\r\n              </Link>\r\n            ))}\r\n          </PostTags>\r\n        )}\r\n        <PostTitle className=\"post_title\">\r\n          <Link to={url}>{title}</Link>\r\n        </PostTitle>\r\n        {description && (\r\n          <Excerpt\r\n            dangerouslySetInnerHTML={{\r\n              __html: description,\r\n            }}\r\n            className=\"excerpt\"\r\n          />\r\n        )}\r\n      </PostDetails>\r\n    </PostCardModernWrapper>\r\n  );\r\n};\r\n\r\nPostCardModern.defaultProps = {\r\n  imageType: 'fluid',\r\n};\r\n\r\nexport default PostCardModern;\r\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const FeaturedPostWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  &:hover {\r\n    .post_preview {\r\n      > a {\r\n        transform: scale(1.1);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostPreview = styled.div`\r\n  flex: 0 0 90px;\r\n  flex-shrink: 0;\r\n  margin-right: 15px;\r\n  overflow: hidden;\r\n  @media (max-width: 990px) {\r\n    flex: 0 0 60px;\r\n  }\r\n  > a {\r\n    display: block;\r\n    transition: 0.15s ease-in-out;\r\n    transform-origin: top left;\r\n  }\r\n`;\r\n\r\nexport const PostDetails = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const PostTitle = styled.h1`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n\r\n  line-height: 1.53;\r\n  margin-bottom: 0;\r\n  font-family: ${themeGet('fontFamily.0')};\r\n\r\n  @media (max-width: 990px) {\r\n    font-size: 16px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    color: ${themeGet('colors.textColor', '#292929')};\r\n    transition: 0.15s ease-in-out;\r\n    &:hover {\r\n      color: ${themeGet('primary', '#D10068')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PostMeta = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-top: 12px;\r\n  @media (max-width: 990px) {\r\n    margin-top: 10px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  a,\r\n  span {\r\n    display: block;\r\n    margin-right: 30px;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    color: ${themeGet('primary', '#D10068')};\r\n    @media (max-width: 990px) {\r\n      font-size: 13px;\r\n      margin-right: 25px;\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport _ from 'lodash';\r\nimport Img from 'gatsby-image';\r\nimport {\r\n  FeaturedPostWrapper,\r\n  PostPreview,\r\n  PostDetails,\r\n  PostTitle,\r\n  PostMeta,\r\n  PostTags,\r\n} from './feature-post.style';\r\n\r\ninterface FeaturedPostProps {\r\n  image?: any;\r\n  title: string;\r\n  url: string;\r\n  tags?: [];\r\n  className?: string;\r\n  imageType?: 'fixed' | 'fluid';\r\n  placeholderBG?: string;\r\n}\r\n\r\nconst FeaturedPost: React.FunctionComponent<FeaturedPostProps> = ({\r\n  image,\r\n  title,\r\n  url,\r\n  tags,\r\n  className,\r\n  imageType,\r\n  placeholderBG,\r\n  ...props\r\n}) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['featured_post'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  return (\r\n    <FeaturedPostWrapper className={addAllClasses.join(' ')} {...props}>\r\n      {image == null ? null : (\r\n        <PostPreview className=\"post_preview\">\r\n          <Link to={url}>\r\n            {imageType === 'fluid' ? (\r\n              <Img\r\n                fluid={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n            ) : (\r\n              <Img\r\n                fixed={image}\r\n                alt=\"post preview\"\r\n                backgroundColor={placeholderBG}\r\n              />\r\n            )}\r\n          </Link>\r\n        </PostPreview>\r\n      )}\r\n\r\n      <PostDetails>\r\n        <PostTitle className=\"post_title\">\r\n          <Link to={url}>{title}</Link>\r\n        </PostTitle>\r\n        <PostMeta>\r\n          {tags == null ? null : (\r\n            <PostTags className=\"post_tags\">\r\n              {tags.slice(0, 2).map((tag: string, index: number) => (\r\n                <Link\r\n                  key={index}\r\n                  to={`/tags/${_.kebabCase(tag)}/`}\r\n                >{`#${tag}`}</Link>\r\n              ))}\r\n            </PostTags>\r\n          )}\r\n        </PostMeta>\r\n      </PostDetails>\r\n    </FeaturedPostWrapper>\r\n  );\r\n};\r\n\r\nFeaturedPost.defaultProps = {\r\n  imageType: 'fluid',\r\n};\r\n\r\nexport default FeaturedPost;\r\n","module.exports = __webpack_public_path__ + \"static/banner-bg-67bd634d5da1a1665f737f413d9e38ef.jpg\";","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import styled from 'styled-components';\r\n\r\nconst PersonalBlogWrapper = styled.div``;\r\n\r\nexport default PersonalBlogWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst BlogPostsWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding-top: 120px;\r\n  position: relative;\r\n  @media (min-width: 991px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1170px;\r\n  }\r\n  @media (max-width: 990px) {\r\n    padding: 80px 45px 0 45px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    padding: 60px 25px 0 25px;\r\n  }\r\n`;\r\nexport const PostRow = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -20px;\r\n  margin-bottom: 30px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 20px;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const PostGrid = styled.div`\r\n  flex: 0 0 50%;\r\n  max-width: 50%;\r\n  padding: 0 20px;\r\n  margin-bottom: 90px;\r\n  @media (max-width: 990px) {\r\n    margin-bottom: 70px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    flex: 0 0 100%;\r\n    max-width: 100%;\r\n  }\r\n  @media (max-width: 575px) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const SeeMore = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport default BlogPostsWrapper;\r\n","import * as React from 'react';\r\nimport { useStaticQuery, graphql, Link } from 'gatsby';\r\nimport Button from '../../../components/button/button';\r\nimport PostCardModern from '../../../components/post-card-modern/post-card-modern';\r\nimport BlogPostsWrapper, { PostRow, PostGrid, SeeMore } from './style';\r\n\r\ntype PostsProps = {};\r\n\r\nconst Posts: React.FunctionComponent<PostsProps> = () => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n        limit: 6\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 200)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"DD [<span>] MMM [</span>]\")\r\n              title\r\n              description\r\n              tags\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 570, maxHeight: 370, quality: 100) {\r\n                    ...GatsbyImageSharpFluid_noBase64\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const Posts = Data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <BlogPostsWrapper>\r\n      <PostRow>\r\n        {Posts.map(({ node }: any) => {\r\n          const title = node.frontmatter.title || node.fields.slug;\r\n          // Random Placeholder Color\r\n          const placeholderColors = [\r\n            '#55efc4',\r\n            '#81ecec',\r\n            '#74b9ff',\r\n            '#a29bfe',\r\n            '#ffeaa7',\r\n            '#fab1a0',\r\n            '#e17055',\r\n            '#0984e3',\r\n            '#badc58',\r\n            '#c7ecee',\r\n          ];\r\n          const setColor =\r\n            placeholderColors[\r\n              Math.floor(Math.random() * placeholderColors.length)\r\n            ];\r\n\r\n          return (\r\n            <PostGrid key={node.fields.slug}>\r\n              <PostCardModern\r\n                key={node.fields.slug}\r\n                title={title}\r\n                image={\r\n                  node.frontmatter.cover == null\r\n                    ? null\r\n                    : node.frontmatter.cover.childImageSharp.fluid\r\n                }\r\n                url={node.fields.slug}\r\n                description={node.excerpt}\r\n                date={node.frontmatter.date}\r\n                tags={node.frontmatter.tags}\r\n                placeholderBG={setColor}\r\n              />\r\n            </PostGrid>\r\n          );\r\n        })}\r\n      </PostRow>\r\n      <SeeMore>\r\n        <Link to=\"page/1\">\r\n          <Button title=\"See more\" type=\"submit\" />\r\n        </Link>\r\n      </SeeMore>\r\n    </BlogPostsWrapper>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import styled from 'styled-components';\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport BannerBG from '../../../images/banner-bg.jpg';\r\n\r\nexport const BannerWrapper = styled.div`\r\n  position: relative;\r\n  padding: 90px 0;\r\n  background-color: #d96233;\r\n  background-image: url(${BannerBG});\r\n  background-size: cover;\r\n  background-position: center;\r\n  min-height: 870px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (max-width: 1500px) {\r\n    min-height: 700px;\r\n    padding: 80px 0;\r\n  }\r\n\r\n  @media (max-width: 990px) {\r\n    min-height: 600px;\r\n    padding: 60px 0;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    min-height: 300px;\r\n    padding: 40px 0;\r\n  }\r\n`;\r\n\r\nexport const BannerInner = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n\r\n  @media (min-width: 991px) {\r\n    width: 900px;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    width: 1170px;\r\n  }\r\n\r\n  @media (max-width: 990px) {\r\n    padding-left: 45px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n  }\r\n`;\r\n\r\nexport const FeaturePosts = styled.div`\r\n  width: 460px;\r\n  max-width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  padding: 45px;\r\n  @media (max-width: 990px) {\r\n    width: 400px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    padding: 25px;\r\n  }\r\n\r\n  .featured_post {\r\n    margin-bottom: 30px;\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  color: ${themeGet('colors.textColor', '#292929')};\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  font-family: ${themeGet('fontFamily.0', \"'Fira Sans',sans-serif\")};\r\n  letter-spacing: 0.17em;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n\r\n  &:after {\r\n    content: '';\r\n    width: 80px;\r\n    height: 1px;\r\n    background: #292929;\r\n    display: block;\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\nimport FeaturePost from '../../../components/feature-post/feature-post';\r\nimport { BannerWrapper, BannerInner, FeaturePosts, Title } from './style';\r\n\r\ntype BannerProps = {};\r\n\r\nconst Banner: React.FunctionComponent<BannerProps> = () => {\r\n  const Data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark(\r\n        sort: { fields: [frontmatter___date], order: DESC }\r\n        limit: 5\r\n        filter: { frontmatter: { tags: { eq: \"featured\" } } }\r\n      ) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            excerpt(pruneLength: 300)\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"DD [<span>] MMM [</span>]\")\r\n              title\r\n              description\r\n              tags\r\n              cover {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 90, maxHeight: 90, quality: 100) {\r\n                    ...GatsbyImageSharpFluid_noBase64\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const Posts = Data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <BannerWrapper>\r\n      <BannerInner>\r\n        <FeaturePosts>\r\n          <Title>Featured Posts</Title>\r\n          {Posts.map(({ node }: any) => {\r\n            const title = node.frontmatter.title || node.fields.slug;\r\n            // Random Placeholder Color\r\n            const placeholderColors = [\r\n              '#55efc4',\r\n              '#81ecec',\r\n              '#74b9ff',\r\n              '#a29bfe',\r\n              '#ffeaa7',\r\n              '#fab1a0',\r\n              '#e17055',\r\n              '#0984e3',\r\n              '#badc58',\r\n              '#c7ecee',\r\n            ];\r\n            const setColor =\r\n              placeholderColors[\r\n                Math.floor(Math.random() * placeholderColors.length)\r\n              ];\r\n\r\n            return (\r\n              <FeaturePost\r\n                key={node.fields.slug}\r\n                title={title}\r\n                image={\r\n                  node.frontmatter.cover == null\r\n                    ? null\r\n                    : node.frontmatter.cover.childImageSharp.fluid\r\n                }\r\n                url={node.fields.slug}\r\n                tags={node.frontmatter.tags}\r\n                placeholderBG={setColor}\r\n              />\r\n            );\r\n          })}\r\n        </FeaturePosts>\r\n      </BannerInner>\r\n    </BannerWrapper>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import * as React from 'react';\r\nimport PersonalBlogWrapper from './style';\r\nimport Posts from './posts';\r\nimport Banner from './banner';\r\n\r\ntype PersonalBlogProps = {};\r\n\r\nconst PersonalBlog: React.FunctionComponent<PersonalBlogProps> = (props) => {\r\n  return (\r\n    <PersonalBlogWrapper {...props}>\r\n      <Banner />\r\n      <Posts />\r\n    </PersonalBlogWrapper>\r\n  );\r\n};\r\n\r\nexport default PersonalBlog;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\nimport PersonalBlog from '../containers/home';\r\nimport SEO from '../components/seo';\r\n\r\nconst HomePage = (props: any) => {\r\n  const { data } = props;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title=\"Agency Blog Modern\"\r\n        description={data.site.siteMetadata.description}\r\n      />\r\n      <PersonalBlog />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"sourceRoot":""}